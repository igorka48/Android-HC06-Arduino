package com.hc_06.yj.bluetoothapplication.ui.activities;import android.bluetooth.BluetoothAdapter;import android.bluetooth.BluetoothDevice;import android.content.Intent;import android.os.Bundle;import android.provider.Settings;import android.support.design.widget.NavigationView;import android.support.v4.view.GravityCompat;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.ActionBarDrawerToggle;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.ListView;import android.widget.SimpleAdapter;import android.widget.Toast;import com.hc_06.yj.bluetoothapplication.R;import com.hc_06.yj.bluetoothapplication.ui.activities.userCabinet.LoginActivity;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Set;public class DevicesListActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {    private ListView mListDevices;    private List<Map<String, String>> mDeviceList = new ArrayList<>();    private BluetoothAdapter mBluetoothAdapter;    private NavigationView mNavigationView;    private DrawerLayout mDrawer;    private Toolbar mToolbar;    ArrayList<String> ar1;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_devices_list);        mListDevices = (ListView) findViewById(R.id.listView);        mNavigationView = (NavigationView) findViewById(R.id.nav_view);        mToolbar = (Toolbar) findViewById(R.id.toolbar);        mNavigationView.setNavigationItemSelectedListener(this);        mDrawer = (DrawerLayout) findViewById(R.id.drawer_layout);        ar1 = new ArrayList<>();        setSupportActionBar(mToolbar);        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(                this, mDrawer, mToolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);        mDrawer.addDrawerListener(toggle);        toggle.syncState();    }    @SuppressWarnings("StatementWithEmptyBody")    @Override    public boolean onNavigationItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == R.id.nav_login) {            startActivity(new Intent(this, LoginActivity.class));        } else if (id == R.id.nav_fav) {            startActivity(new Intent(this, FavoritesActivity.class));        } else if (id == R.id.nav_map) {            startActivity(new Intent(this, MapActivity.class));        }        mDrawer.closeDrawer(GravityCompat.START);        return true;    }    @Override    public void onBackPressed() {        if (mDrawer.isDrawerOpen(GravityCompat.START)) {            mDrawer.closeDrawer(GravityCompat.START);        } else {            super.onBackPressed();        }    }    @Override    protected void onDestroy() {        //unregisterReceiver(mReceiver);        super.onDestroy();    }    @Override    protected void onStop() {        super.onStop();    }    @Override    protected void onStart() {        super.onStart();        try {            mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();            Set<BluetoothDevice> bondedSet = mBluetoothAdapter.getBondedDevices();            Log.v("LOG", "BluetoothDemo : bondedSet: " + bondedSet);            int count = 0;            mDeviceList.clear();            if (bondedSet.size() > 0) {                for (BluetoothDevice device : bondedSet) {                    Map<String, String> datum = new HashMap<>(2);                    datum.put("name", device.getName());                    datum.put("address", device.getAddress());                    mDeviceList.add(datum);                }                SimpleAdapter adapter = new SimpleAdapter(DevicesListActivity.this, mDeviceList,                        android.R.layout.simple_list_item_2,                        new String[] { "name", "address"},                        new int[] { android.R.id.text1, android.R.id.text2});                mListDevices.setAdapter(adapter);                mListDevices.setOnItemClickListener(new AdapterView.OnItemClickListener() {                    @Override                    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                        Map<String, String> data = mDeviceList.get(i);                        Intent intent1 = new Intent(DevicesListActivity.this, SendToHCModule.class);                        intent1.putExtra("name", data.get("name"));                        intent1.putExtra("address", data.get("address"));                        if(getIntent().hasExtra("list")) {                            ar1 = getIntent().getExtras().getStringArrayList("list");                            if(ar1.size() > 0) {                                intent1.putStringArrayListExtra("list", ar1);                                startActivity(intent1);                            }                        } else {                            Toast.makeText(DevicesListActivity.this, R.string.add_location_warning,                                    Toast.LENGTH_SHORT).show();                            Intent intent = new Intent(DevicesListActivity.this, FavoritesActivity.class);                            startActivity(intent);                        }                    }                });            } else {                //bondedAdapter.add("No Devices");            }            // listViewPairedDevices.setAdapter(bondedAdapter);        } catch (Exception e) {            // TODO Auto-generated catch block            Log.e("LOG", e.toString(), e.fillInStackTrace());        }    }    public void onPairDeviceBtn(View view) {        startActivity(new Intent(Settings.ACTION_BLUETOOTH_SETTINGS));    }//    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {//        public void onReceive(Context context, Intent intent) {//            String action = intent.getAction();//            if (BluetoothDevice.ACTION_FOUND.equals(action)) {//                BluetoothDevice device = intent//                        .getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);//////                Map<String, String> datum = new HashMap<>(2);//                datum.put("name", device.getName());//                datum.put("address", device.getAddress());//                mDeviceList.add(datum);////////                Log.i("BT", device.getName() + "\n" + device.getAddress());//////                SimpleAdapter adapter = new SimpleAdapter(DevicesListActivity.this, mDeviceList,//                        android.R.layout.simple_list_item_2,//                        new String[] {"name", "address" },//                        new int[] {android.R.id.text1, android.R.id.text2 });////                listView.setAdapter(adapter);//                listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {//                    @Override//                    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {//                        Map<String, String> data = mDeviceList.get(i);//                        Intent intent1 = new Intent(DevicesListActivity.this, SendToHCModule.class);//                        intent1.putExtra("name", data.get("name"));//                        intent1.putExtra("address", data.get("address"));//                    }//                });//            }//        }//    };}